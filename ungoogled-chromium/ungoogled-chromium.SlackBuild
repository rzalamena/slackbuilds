#!/bin/sh
#
# Copyright (C) 2021-2022 Rafael F. Zalamena
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# Permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

# Change log
#
# 2022-04-11:
#   Bump ungoogled chromium version to 99.0.4844.51-1.
#   Now based on Slackware 15.0 and this script licensed under BSD 1 clause.
# 2021-08-31:
#   Rewrite to use new template and bump to ungoogled chromium version
#   92.0.4515.159-1.
# 2020-12-10:
#   Rewrite to simplify shell script, strip binaries, include chrome driver,
#   include sandbox version, move heredocs to files, use all bundled libraries
#   instead of system version (makes binary survive system libraries upgrades)
#   and bump to ungoogled chromium version 87.0.4280.88-1.
# 2020-02-10:
#   First version of ungoogled chromium slackbuild for version 80.0.3987.87-2.

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=ungoogled-chromium
VERSION=${VERSION:-99.0.4844.51}
VERSION_REV=${VERSION_REV:-1} # ungoogled chromium revision
BUILD=${BUILD:-1}
PKGTYPE=${PKGTYPE:-txz}

PATCHES=""
PATCHES+=" 01-inkdrop.patch"
PATCHES+=" 02-arm-tflite-cast.patch"
PATCHES+=" 03-enumtable-crash.patch"
PATCHES+=" 04-system-libdrm.patch"
PATCHES+=" 05-gtk4-build.patch"
PATCHES+=" 06-glibc-2.34.patch"
PATCHES+=" 07-oauth2-default.patch"
PATCHES+=" 08-shim-headers.patch"
PATCHES+=" 09-cross-compile.patch"
PATCHES+=" 10-sql-virtual-cursor.patch"
PATCHES+=" 11-vdpau.patch"

if [ -z "$ARCH" ]; then
  case "$(uname -m)" in
    i?86) export ARCH=i586 ;;
    arm*) export ARCH=arm ;;
    *) export ARCH=$(uname -m) ;;
  esac
fi

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mcpu=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
elif [ "$ARCH" = "armv7hl" ]; then
  SLKCFLAGS="-O3 -march=armv7-a -mfpu=vfpv3-d16"
  LIBDIRSUFFIX=""
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

JOBS=$(nproc)
NUMJOBS=${NUMJOBS:-" -j$JOBS "}
THINLTO_FLAGS="-fuse-ld=lld -Wl,--thinlto-jobs=4"
#THINLTO_FLAGS="-fuse-ld=lld -Wl,--thinlto-jobs=$JOBS"
HARDENING_FLAGS="-fstack-protector-strong -D_FORTIFY_SOURCE=2"
export CC=$ARCH-slackware-linux-clang CXX=$ARCH-slackware-linux-clang++ \
  AR=llvm-ar NM=llvm-nm \
  CFLAGS="$SLKCFLAGS $HARDENING_FLAGS -flto=thin" \
  CXXFLAGS="$SLKCFLAGS $HARDENING_FLAGS -flto=thin" \
  LDFLAGS="$THINLTO_FLAGS -Wl,--as-needed -Wl,-z,relro,-z,now -pie"

TMP=${TMP:-/tmp/slackbuild}
PKG=${PKG:-$TMP/package-$PKGNAM}
rm -rf $PKG
mkdir -p $TMP $PKG

cd $TMP
if [ ! -f chromium-$VERSION/.patched ]; then
  rm -rf ungoogled-chromium-$VERSION-$VERSION_REV chromium-$VERSION
  tar -xzf $CWD/$VERSION-$VERSION_REV.tar.gz
  tar --xz -xf $CWD/chromium-$VERSION.tar.xz

  # Extract widevine component from proprietary version.
  ar p $CWD/google-chrome-stable_$VERSION-1_amd64.deb data.tar.xz \
    | tar --xz -xvf - ./opt/google/chrome/WidevineCdm || exit 1
  mv -v opt/google/chrome/WidevineCdm WidevineCdm || exit 1
  rm -rf opt
fi

SRCDIR=$TMP/ungoogled-chromium-$VERSION-$VERSION_REV
BUILDDIR=$TMP/chromium-$VERSION
cd $BUILDDIR

# Remove google traces and apply patches.
if [ ! -f .patched ]; then
  $SRCDIR/utils/prune_binaries.py ./ $SRCDIR/pruning.list || exit 1
  $SRCDIR/utils/patches.py apply ./ $SRCDIR/patches || exit 1
  $SRCDIR/utils/domain_substitution.py \
    apply \
    -r $SRCDIR/domain_regex.list \
    -f $SRCDIR/domain_substitution.list \
    -c domainsubcache.tar.gz ./ || exit 1

  # Prepare build directory to use node.
  mkdir -p third_party/node/linux/node-linux-x64/bin
  ln -s $(which node) third_party/node/linux/node-linux-x64/bin || exit 1

  # Allow building against system libraries in official builds
  sed -i 's/OFFICIAL_BUILD/GOOGLE_CHROME_BUILD/' \
    tools/generate_shim_headers/generate_shim_headers.py || exit 1

  # Compile `gn` so we can generate the build files.
  mkdir -p out/Default
  tools/gn/bootstrap/bootstrap.py \
    --skip-generate-buildfiles $NUMJOBS -o out/Default || exit 1

  # Copy configuration and generate build files.
  cp -v $CWD/args.gn out/Default/args.gn || exit 1
  ./out/Default/gn gen out/Default --fail-on-unused-args || exit 1

  for patch in $PATCHES; do
    patch -p1 -i $CWD/$patch || exit 1
  done

  # Keep in mind that the source is patched.
  touch .patched
fi

# Compile chromium:
ninja -C out/Default $NUMJOBS chrome chrome_sandbox chromedriver || exit 1

# Install binaries:
install -o root -g root -m 0755 -v -D \
  $BUILDDIR/out/Default/chrome \
  $PKG/usr/lib$LIBDIRSUFFIX/chromium-browser/chrome || exit 1
install -o root -g root -m 4755 -v -D \
  $BUILDDIR/out/Default/chrome_sandbox \
  $PKG/usr/lib$LIBDIRSUFFIX/chromium-browser/chrome_sandbox || exit 1
install -o root -g root -m 0755 -v -D \
  $BUILDDIR/out/Default/chromedriver \
  $PKG/usr/lib$LIBDIRSUFFIX/chromium-browser/chromedriver || exit 1
install -o root -g root -m 0644 -v -D \
  -t $PKG/usr/lib$LIBDIRSUFFIX/chromium-browser \
  $BUILDDIR/out/Default/*.bin \
  $BUILDDIR/out/Default/*.pak \
  $BUILDDIR/out/Default/*.so || exit 1

install -o root -g root -m 0644 -v -D \
  $BUILDDIR/out/Default/icudtl.dat \
  $PKG/usr/lib$LIBDIRSUFFIX/chromium-browser || exit 1

find $PKG -type f -exec file {} \+ \
  | egrep '(executable|shared object)' \
  | grep 'ELF' \
  | cut -d ':' -f 1 \
  | xargs strip --strip-unneeded

mkdir -p $PKG/usr/man/man1
sed -e 's/@@PACKAGE@@/chromium-browser/g;s/@@MENUNAME@@/Chromium/g;' \
  $BUILDDIR/chrome/app/resources/manpage.1.in \
  | gzip -9 > $PKG/usr/man/man1/chromium-browser.1.gz
ln -sv /usr/man/man1/chromium-browser.1.gz \
  $PKG/usr/man/man1/chromium.1.gz

# Install application file.
mkdir -p $PKG/usr/share/applications
expr='s/@@MENUNAME@@/Chromium/g;'
expr+='s/@@USR_BIN_SYMLINK_NAME@@/chromium-browser/g;'
expr+='s/@@PACKAGE@@/chromium-browser/g;'
expr+='s|\(^Exec=\)/usr/bin/|\1|g;'
sed -e "$expr" \
  $BUILDDIR/chrome/installer/linux/common/desktop.template \
  > $PKG/usr/share/applications/chromium-browser.desktop || exit 1

# Install locales:
mkdir -p $PKG/usr/lib$LIBDIRSUFFIX/chromium-browser/locales
install -o root -g root -m 0644 -v -D \
  -t $PKG/usr/lib$LIBDIRSUFFIX/chromium-browser/locales \
  $BUILDDIR/out/Default/locales/* || exit 1

# Install resources:
for file in $(cd $BUILDDIR/out/Default/resources; find . -type f); do
  install -o root -g root -m 0644 -v -D \
    $BUILDDIR/out/Default/resources/$file \
    $PKG/usr/lib$LIBDIRSUFFIX/chromium-browser/resources/$file || exit 1
done

# Install launcher script:
install -o root -g root -m 0755 -v -D \
  $CWD/chromium-launcher.sh \
  $PKG/usr/lib$LIBDIRSUFFIX/chromium-browser/chromium-launcher.sh || exit 1

mkdir -p $PKG/usr/bin
ln -sv /usr/lib$LIBDIRSUFFIX/chromium-browser/chromium-launcher.sh \
  $PKG/usr/bin/chromium
ln -sv /usr/lib$LIBDIRSUFFIX/chromium-browser/chromium-launcher.sh \
  $PKG/usr/bin/chromium-browser

# Install configuration file:
install -o root -g root -m 0644 -v -D \
  $CWD/chromium-default $PKG/etc/chromium/default.new || exit 1

# Install icons:
for size in 16 32; do
  install -o root -g root -m 0644 -v -D \
    $BUILDDIR/chrome/app/theme/default_100_percent/chromium/product_logo_$size.png \
    $PKG/usr/share/icons/hicolor/${size}x${size}/apps/chromium-browser.png \
    || exit 1
done

for size in 24 48 64 128 256; do
  install -o root -g root -m 0644 -v -D \
    $BUILDDIR/chrome/app/theme/chromium/product_logo_$size.png \
    $PKG/usr/share/icons/hicolor/${size}x${size}/apps/chromium-browser.png \
    || exit 1
done

# Install widevine binary:
cp -rv $TMP/WidevineCdm \
  $PKG/usr/lib$LIBDIRSUFFIX/chromium-browser/WidevineCdm || exit 1

mkdir -p $PKG/install
cat $CWD/doinst.sh > $PKG/install/doinst.sh
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $TMP/$PKGNAM-$VERSION-$ARCH-$BUILD.$PKGTYPE
