#!/bin/sh
#
# Copyright (C) 2021 Rafael F. Zalamena
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=nvidia-kernel
VERSION=${VERSION:-470.57.02}
BUILD=${BUILD:-1}
PKGTYPE=${PKGTYPE:-txz}
KERN=${KERN:-$(uname -r)}
KERNDIR=${KERNDIR:-/usr/src/linux-$KERN}

if [ -z "$ARCH" ]; then
  case "$(uname -m)" in
    i?86) export ARCH=i586 ;;
    arm*) export ARCH=arm ;;
    *) export ARCH=$(uname -m) ;;
  esac
fi

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mcpu=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
elif [ "$ARCH" = "armv7hl" ]; then
  SLKCFLAGS="-O3 -march=armv7-a -mfpu=vfpv3-d16"
  LIBDIRSUFFIX=""
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

NUMJOBS=${NUMJOBS:-" -j$(nproc) "}

TMP=${TMP:-/tmp/slackbuild}
PKG=${PKG:-$TMP/package-$PKGNAM}
rm -rf $PKG
mkdir -p $TMP $PKG

cd $TMP
rm -rf NVIDIA-Linux-$ARCH-$VERSION

sh $CWD/NVIDIA-Linux-${ARCH}-${VERSION}.run --extract-only
cd NVIDIA-Linux-${ARCH}-${VERSION} || exit 1
( \
  cd kernel ; \
  make $NUMJOBS SYSRC=$KERNDIR module || exit 1 \
)

mkdir -p $PKG/lib/modules/$KERN/kernel/drivers/video
for file in nvidia.ko nvidia-drm.ko nvidia-modeset.ko \
            nvidia-peermem.ko nvidia-uvm.ko; do
  install -o root -g root -m 0664 -v kernel/$file \
    $PKG/lib/modules/$KERN/kernel/drivers/video/$file
done

mkdir -p $PKG/lib/firmware/nvidia/$VERSION
install -o root -g root -m 0644 -v firmware/gsp.bin \
  $PKG/lib/firmware/nvidia/$VERSION/gsp.bin

mkdir -p $PKG/usr/share/X11/xorg.conf.d
cat nvidia-drm-outputclass.conf > \
  $PKG/usr/share/X11/xorg.conf.d/99-nvidia-drm-outputclass.conf.new

mkdir -p $PKG/install
sed "s/@KERN@/$KERN/" $CWD/doinst.sh > $PKG/install/doinst.sh
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $TMP/$PKGNAM-$VERSION-$ARCH-$BUILD.$PKGTYPE
